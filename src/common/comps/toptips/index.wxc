<template>
    <view class="topTips {{_show?'tipsBoxShow':'tipsBoxHide'}}" wx:if="{{show}}">
        <view wx:if="{{icon || iconImage}}" class="tipsIcon">
            <block wx:if="{{icon && !iconImage}}">
                <wxc-icon icon="{{icon}}" iconStyle="font-size: 36rpx;color: white;{{iconStyle}}"></wxc-icon>
            </block>
            <image wx:if="{{iconImage}}" class="tipsImage" src="{{iconImage}}" mode="widthFix"></image>
        </view>
        <text class="tipContent" style="text-align: {{icon||iconImage?'left':'center'}}">
            <slot wx:if="{{!text}}"></slot>{{text ? text : ''}}
        </text>
    </view>
</template>

<script>
    export default {
        config: {
            usingComponents: {
                'wxc-icon':'common/comps/icon'
            }
        },
        properties: {
            show: {
                type: Boolean,
                value: false
            },
            icon: {
                type: String,
                value: ''
            },
            text: {
                type: String,
                value: ''
            },
            iconImage: {
                type: String,
                value: ''
            },
            iconStyle: {
                type: String,
                value: ''
            },
            duration: {
                type: [Number],
                value: 2000
            }
        },
        data: {
            _show:false
        },
        methods: {
            show(text) {
                let duration = this.data.duration;
                clearTimeout(this.timer);
                this.setData({
                    show: true,
                    _show: true,
                    text: text || this.data.text
                });
                if(duration>0&&duration !== Infinity){
                    this.timer = setTimeout(()=>{
                        this.hide();
                    },duration)
                }
            },
            hide() {
                this.timer = clearTimeout(this.timer);
                this.setData({
                    _show: false
                });
                let timer = setTimeout(()=>{
                    this.setData({
                        show: false
                    },()=>clearTimeout(timer));
                },200)
            },
        },
        attached(){

        }

    }
</script>

<style lang="less">
    @import "../theme";
    .topTips{
        z-index: 999;
        position: fixed;
        display: flex;
        top: 0;
        left: 0;
        flex-direction: row;
        justify-content: flex-start;
        align-content: center;
        box-sizing: border-box;
        padding:4rpx 10rpx 4rpx 20rpx;
        height: 68rpx;
        width: 100%;
        background-color: rgba(255, 0, 0, 0.67);
        .tipContent{
            color: white;
            font-size: 24rpx;
            line-height: 60rpx;
            width: 100%;
        }
        .tipsIcon{
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: center;
            width: 68rpx;
            .tipsImage{
                width: 40rpx;
                height: 40rpx;
            }
        }

    }
    .tipsBoxShow{
        animation: show .2s ease;
    }
    .tipsBoxHide{
        animation: hide .2s ease-in-out;
    }
    @keyframes show
    {
        from {
            top: -68rpx;
            opacity: 0;
        }
        to {
            top: 0;
        }
    }
    @keyframes hide
    {
        from {
            top: 0;
        }
        to {
            top: -68rpx;
        }
    }
</style>
